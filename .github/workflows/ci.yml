name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'maven'

    - name: Cache SonarCloud packages
      uses: actions/cache@v4
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Set up Chrome
      uses: browser-actions/setup-chrome@latest
      with:
        chrome-version: stable

    - name: Build with Maven
      run: mvn -B clean verify
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Run Unit Tests
      run: mvn test -Dtest=UsuarioTest -B
      continue-on-error: false

    - name: Run Selenium Tests
      run: mvn test -Dtest=UsuarioUITest -Dselenium.tests.enabled=true
      env:
        DISPLAY: :99
      continue-on-error: false

    - name: Set up JMeter
      run: |
        wget https://archive.apache.org/dist/jmeter/binaries/apache-jmeter-${JMETER_VERSION}.tgz
        tar -xzf apache-jmeter-${JMETER_VERSION}.tgz
      env:
        JMETER_VERSION: 5.5

    - name: Start Application
      run: |
        mvn spring-boot:run &
        echo "Waiting for application to start..."
        sleep 30  # Give the application time to start

    - name: Run JMeter Tests
      run: |
        apache-jmeter-5.5/bin/jmeter -n \
          -t src/test/resources/jmeter/HealthTrackTest.jmx \
          -l test-results.jtl \
          -e -o jmeter-report \
          -Jserver.host=localhost \
          -Jserver.port=8080
      continue-on-error: false

    - name: Stop Application
      if: always()
      run: |
        pkill -f "spring-boot:run" || true

    - name: SonarQube Analysis
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        mvn verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
          -Dsonar.host.url=http://ec2-35-171-234-181.compute-1.amazonaws.com:9000 \
          -Djava.version=17

    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          target/surefire-reports/
          target/failsafe-reports/
          test-results.jtl
          jmeter-report/
        retention-days: 7

    - name: Upload Coverage Report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: target/site/jacoco/
        retention-days: 7

    - name: Check Test Results
      if: always()
      run: |
        if [ -d "target/surefire-reports" ]; then
          if ls target/surefire-reports/TEST-*.xml 1> /dev/null 2>&1; then
            echo "Test results available"
            cat target/surefire-reports/TEST-*.xml
          else
            echo "No test XML files found in target/surefire-reports/"
            ls -la target/surefire-reports/
            exit 1
          fi
        else
          echo "Directory target/surefire-reports/ does not exist"
          echo "Current directory contents:"
          ls -la target/
          exit 1
        fi 